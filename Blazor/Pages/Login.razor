@page "/login"
@inject Blazor.Services.APIService Api
@inject Blazor.Services.TokenStorage Storage
@inject AuthenticationStateProvider AuthProvider
@using Microsoft.AspNetCore.Components.Authorization

<h3>Login</h3>

@if (!string.IsNullOrWhiteSpace(Error))
{
    <div class="alert alert-danger">@Error</div>
}

<EditForm Model="model" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label>Username</label>
        <InputText class="form-control" @bind-Value="model.Username" />
    </div>
    <div class="mb-3">
        <label>Password</label>
        <InputText class="form-control" @bind-Value="model.Password" type="password" />
    </div>
    <button class="btn btn-primary" disabled="@loading">Log ind</button>
</EditForm>

@code {
    private string? Error;
    private bool loading;
    private LoginModel model = new();

    private class LoginModel
    {
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
    }

    private async Task HandleLogin()
    {
        Error = null;
        loading = true;

        var token = await Api.LoginAsync(model.Username, model.Password);
        if (string.IsNullOrWhiteSpace(token))
        {
            Error = "Forkert brugernavn eller adgangskode.";
            loading = false;
            return;
        }

        await Storage.SetTokenAsync(token);
        if (AuthProvider is Blazor.Services.AuthStateProvider custom)
        {
            await custom.MarkUserAsAuthenticatedAsync(token);
        }

        loading = false;
        // TODO: Navigér til en beskyttet side 
        // NavigationManager.NavigateTo("/");
    }
}
